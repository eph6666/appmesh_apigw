apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-v1
  namespace: my-apps
spec:
  selector:
    matchLabels:
      app: django
      version: v1
  replicas: 1
  template:
    metadata:
      labels:
        app: django
        version: v1
    spec:
      containers:
      - image: 111706684826.dkr.ecr.us-east-1.amazonaws.com/demo/django:v2
      # - image: 111706684826.dkr.ecr.us-east-1.amazonaws.com/demo/result:c5c574a326911170996724cae3c91d7a4d492e0a
        name: django
---
apiVersion: v1
kind: Service
metadata:
  name: django-v1
  namespace: my-apps
spec:
  type: ClusterIP
  ports:
  - name: "django-service"
    port: 8080
    targetPort: 8080
  selector:
    app: django
    version: v1
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: django
  namespace: my-apps
spec:
  podSelector:
    matchLabels:
      app: django
      version: v1
  listeners:
    - portMapping:
        port: 8080
        protocol: http
      healthCheck:
        protocol: http
        path: '/'
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  serviceDiscovery:
    dns:
      hostname: django-v1.my-apps.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: django
  namespace: my-apps
spec:
  awsName: django.my-apps.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: django-router
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  name: django-router
  namespace: my-apps
spec:
  listeners:
    - portMapping:
        port: 80
        protocol: http
  routes:
    - name: result-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: django
              weight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: django
  namespace: my-apps
  labels:
    app: django
spec:
  ports:
  - port: 8080
    name: http